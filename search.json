[{"title":"通过 Maven Archetype 快速创建 Java 项目","url":"/2025/03/30/create-archetype/","content":"告别繁琐，拥抱高效：Maven Archetype 快速创建 Java 项目你是否还在为每次创建 Java 项目时，都要手动创建各个软件包而感到烦恼？你是否渴望有一种更高效、更便捷的方式来搭建 Java 项目的脚手架？那么，Maven Archetype 就是你一直在寻找的答案。Maven Archetype 是 Maven 提供的一种项目模板工具，它可以帮助你快速创建符合特定规范的 Java 项目。通过 Maven Archetype，你可以告别繁琐的手动创建软件包的过程，只需简单的几步操作，就能快速搭建出一个结构完整的 Java 项目。\n本地脚手架：定制你的专属项目模板如果你对现有的 Maven Archetype 不满意，或者想创建符合自己团队规范的项目模板，那么你可以使用 Maven Archetype 提供的 archetype:create-from-project 命令，从现有的项目中生成自己的 Archetype。\n准备现有项目：打造你的项目蓝本首先，你需要准备一个结构完整的现有项目，这个项目将作为你创建 Archetype 的蓝本。项目的目录结构应该清晰、规范，并且包含你希望在 Archetype 中保留的各种资源文件。\narchetype:create-from-project：一键生成 Archetype在项目根目录执行以下命令：\nCopy Code\n\nmvn archetype:create-from-project\n\n这个命令会自动分析你的项目结构，并生成一个包含项目元数据的 Archetype 项目。!\n本地安装：让 Archetype 触手可及进入生成的 target/generated-sources/archetype 目录，执行以下命令进行本地安装：\nCopy Code\n\ncd target/generated-sources/archetype &amp;&amp; mvn clean install\n\n这个命令会将你的 Archetype 安装到本地 Maven 仓库，以便你可以在创建新项目时使用它。\n\n添加本地脚手架：在 IDE 中使用 Archetype在你的 IDE 中（例如 IntelliJ IDEA），添加本地 Archetype 仓库，以便在创建新项目时可以选择你自定义的 Archetype。\n\n创建项目：告别繁琐，一键生成现在，你可以使用你自定义的 Archetype 来创建新的 Java 项目了。在 IDE 中选择 “New Project”，然后选择 “Maven”，在 Archetype 列表中选择你自定义的 Archetype，填写项目信息，点击 “Create”，一个结构完整的 Java 项目就创建完成了。\n\n项目结果：\n\n总结：Maven Archetype，你的项目脚手架利器Maven Archetype 是一种非常实用的项目模板工具，它可以帮助你快速创建符合特定规范的 Java 项目。通过 Maven Archetype，你可以告别繁琐的手动创建软件包的过程，只需简单的几步操作，就能快速搭建出一个结构完整的 Java 项目。Maven Archetype 的优点在于：\n\n高效便捷：快速创建项目脚手架，节省大量时间。\n规范统一：保证项目结构的一致性，提高团队协作效率。\n可定制化：可以根据自己的需求创建自定义的 Archetype。\n\nMaven Archetype 的缺点在于：\n\n学习成本：需要一定的 Maven 知识。\n维护成本：需要定期维护 Archetype，以保证其与最新的技术栈保持一致。总的来说，Maven Archetype 是一种非常值得学习和使用的项目模板工具。如果你想提高 Java 项目的开发效率，那么 Maven Archetype 绝对是你的不二之选。\n\n","categories":["教程","开发"],"tags":["Java","Maven"]},{"title":"Hello World","url":"/2025/03/30/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new postCopy Code\n\nhexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun serverCopy Code\n\nhexo server\n\nMore info: Server\nGenerate static filesCopy Code\n\nhexo generate\n\nMore info: Generating\nDeploy to remote sitesCopy Code\n\nhexo deploy\n\nMore info: Deployment\n"},{"title":"使用Hexo和Vercel快速搭建你的个人博客","url":"/2025/03/30/hexo-vercel-blog/","content":"使用Hexo和Vercel快速搭建你的个人博客前言在这个信息爆炸的时代，拥有一个属于自己的博客，记录生活、分享知识，显得尤为重要。Hexo和Vercel的组合，以其简洁、高效的特点，成为了搭建个人博客的理想选择。本文将带你一步步完成Hexo博客的搭建，并将其部署到Vercel平台。\n什么是Hexo？Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内即可利用靓丽的主题生成静态网页。\n优点：\n\n快速生成静态网页： Hexo能够快速将Markdown文件转换成静态HTML页面。\n支持Markdown： 使用Markdown编写文章，让你专注于内容创作。\n丰富的主题： 拥有众多精美的主题可供选择，定制你的博客风格。\n强大的插件系统： 丰富的插件可以扩展Hexo的功能。\n\n什么是Vercel？Vercel是一个用于前端和静态站点的云平台，提供快速的部署和CDN加速。\n优点：\n\n简单易用： Vercel的部署流程非常简单，几分钟即可完成部署。\n快速部署： Vercel提供快速的CDN加速，让你的博客访问速度更快。\n免费SSL证书： Vercel提供免费的SSL证书，保证你的博客安全。\n自动部署： Vercel可以与Git仓库关联，实现自动部署。\n\n准备工作在开始之前，请确保你已经安装了以下工具：\n\nNode.js： Hexo基于Node.js，所以需要安装Node.js环境。\nGit： 用于版本控制和部署到Vercel。\n\n步骤一：安装Hexo打开你的命令行工具，执行以下命令安装Hexo：\nCopy Code\n\nnpm install -g hexo-cli\n\n步骤二：初始化Hexo博客选择一个你喜欢的目录，作为你博客的根目录，然后执行：\nCopy Code\n\nhexo init myblogcd myblognpm install\n\n步骤三：本地预览安装完成后，可以先在本地预览一下：\nCopy Code\n\nhexo server\n\n然后打开浏览器，访问http://localhost:4000，你应该能看到Hexo默认的博客页面。\n步骤四：撰写文章使用以下命令创建一篇新文章：\nCopy Code\n\nhexo new &quot;你的文章标题&quot;\n\n这会在source/_posts目录下生成一个Markdown文件，你可以用你喜欢的编辑器打开它，然后开始写作。\n步骤五：生成静态文件文章写好后，执行以下命令生成静态文件：\nCopy Code\n\nhexo generate\n\n这会在public目录下生成博客的静态文件。\n步骤六：部署到Vercel\n注册Vercel账号： 前往Vercel官网注册一个账号。\n安装Vercel CLI：\n\nCopy Code\n\nnpm install -g vercel\n\n\n登录Vercel：\n\nCopy Code\n\nvercel login\n\n\n部署：\n\nCopy Code\n\nvercel\n\nVercel会引导你进行部署，选择你的博客目录（也就是public目录的上一级目录），然后Vercel会自动部署你的博客。\n注意：Vercel会自动检测到你的项目是Hexo项目，并自动进行构建。如果Vercel没有自动构建，你需要在Vercel的项目设置中，手动配置构建命令为hexo generate，输出目录为public。\n步骤七：配置域名（可选）Vercel会给你一个默认的域名，你也可以将你自己的域名绑定到Vercel。\n结语通过以上步骤，你已经成功搭建了一个基于Hexo和Vercel的个人博客。现在你可以开始撰写你的第一篇文章，分享你的知识和生活。\n更多\nHexo主题： 探索更多Hexo主题，打造个性化博客。\nHexo插件： 使用Hexo插件扩展博客功能。\nVercel配置： 深入了解Vercel的配置选项，优化你的博客性能。\n\n","categories":["教程"],"tags":["Hexo","Vercel","博客搭建","前端"]},{"title":"在 Windows 上安装 Docker","url":"/2025/03/30/install-docker-for-windwos/","content":"想在 Windows 上玩转 Docker？ 没问题！ 作为一个在容器化领域摸爬滚打多年的老鸟，我来手把手教你如何在 Windows 上安装 Docker，保证让你轻松上手！ 不过，友情提示一下，安装 Docker 需要管理员权限哦，记得先确认一下。\n第一步：检查系统要求\n操作系统版本：Docker Desktop 需要 Windows 10 或更高版本。 建议使用 Windows 10 2004 或更高版本，以获得最佳体验。\n启用 WSL 2：Docker Desktop 需要 WSL 2 (Windows Subsystem for Linux 2) 支持。 如果你的系统没有启用 WSL 2，需要先启用它。\n硬件要求：\n64 位处理器，支持虚拟化。\n至少 4GB 内存。\nBIOS 中启用虚拟化。\n\n\n\n第二步：启用 WSL 2\n检查 WSL 是否已启用：以管理员身份打开 PowerShell，执行以下命令：\n\nCopy Code\n\nGet-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n\n如果返回结果中 `State` 为 `Enabled`，则表示 WSL 已启用。 如果未启用，请继续下一步。\n\n\n启用 WSL：以管理员身份打开 PowerShell，执行以下命令：\n\nCopy Code\n\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestart\n\n执行完成后，重启电脑。\n\n\n启用虚拟机平台：以管理员身份打开 PowerShell，执行以下命令：\n\nCopy Code\n\nEnable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -NoRestart\n\n执行完成后，重启电脑。\n\n\n下载并安装 Linux 内核更新包：访问 https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi，下载并安装 Linux 内核更新包。\n\n设置 WSL 2 为默认版本：以管理员身份打开 PowerShell，执行以下命令：\n\n\nCopy Code\n\nwsl --set-default-version 2\n\n第三步：下载并安装 Docker Desktop\n下载 Docker Desktop：下载 Docker Desktop for Windows。\n安装 Docker Desktop：双击下载的 Docker Desktop 安装包，按照提示进行安装。\n启动 Docker Desktop：安装完成后，启动 Docker Desktop。\n接受协议：启动 Docker Desktop 后，会提示你接受 Docker Subscription Service Agreement，点击 “Accept” 接受协议。\n\n第四步：配置 Docker Desktop\n登录 Docker Hub：在 Docker Desktop 界面，点击 “Sign in” 登录你的 Docker Hub 账号。 如果你没有 Docker Hub 账号，需要先注册一个。\n配置资源：在 Docker Desktop 界面，点击 “Settings”，可以配置 Docker Desktop 的资源，例如 CPU、内存、磁盘空间等。 建议根据你的电脑配置进行调整。\n配置 WSL 集成：在 Docker Desktop 界面，点击 “Resources”，选择 “WSL INTEGRATION”，启用你想要集成的 WSL 发行版。\n\n第五步：验证 Docker 安装\n打开 PowerShell：打开 PowerShell。\n执行 Docker 命令：执行以下命令：\n\nCopy Code\n\ndocker version\n\n如果返回 Docker 的版本信息，则表示 Docker 安装成功。\n\n\n运行 Hello World 镜像：执行以下命令：\n\nCopy Code\n\ndocker run hello-world\n\n如果成功运行 Hello World 镜像，则表示 Docker 可以正常工作。\n\n一些小建议\n更新 Docker Desktop：Docker Desktop 会定期发布更新，建议及时更新，以获得最佳体验。\n学习 Docker 命令：学习 Docker 命令可以帮助你更好地使用 Docker。\n阅读 Docker 文档：Docker 官方文档提供了详细的 Docker 使用说明，可以帮助你解决遇到的问题。\n\n总结通过以上步骤，你就可以在 Windows 上安装 Docker Desktop 了。 整个过程可能会遇到一些问题，但只要按照步骤一步一步操作，相信你一定能够成功安装并运行 Docker。\n记住，Docker 是一个强大的工具，可以帮助你更好地管理和部署应用程序，希望你能够充分利用 Docker 的优势，提高你的开发效率。\n","categories":["Docker","Windows"],"tags":["Docker","Windows","安装"]},{"title":"在 Windows 上使用 SpotX 和 Spicetify 定制你的 Spotify 体验","url":"/2025/04/03/init-spotify/","content":"我曾对国内音乐软件的各种灰色地带感到烦恼，因此毅然转投国外，最终选择了 Spotify。 然而，现实是囊中羞涩，难以承担高昂的会员费用。 在这种情况下，我偶然发现了 SpotX 和 Spicetify 这两个神器，它们让我能够在一定程度上定制 Spotify 体验，并去除广告。在此，我必须郑重声明： 如果你有经济能力，我强烈建议你付费订阅 Spotify。 毕竟，尊重版权、支持音乐创作是每个音乐爱好者应尽的义务。 SpotX 和 Spicetify 只是在经济条件有限的情况下，一种无奈的选择。 希望未来我也有能力为自己喜欢的音乐付费，支持音乐人创作出更多优秀的作品。\n第一步：安装 Spotify [可选]\n下载 Spotify：首先，你需要从 Spotify 官网下载并安装 Spotify 客户端。\n\n\n\n安装 Spotify：双击下载的安装包，按照提示完成安装。\n提示：如果你已经安装了 Spotify，可以跳过此步骤。\n\n\n\n第二步：使用 SpotX 安装 Spotify（去除广告）\n进入 SpotX 仓库，按照 README 说明进行安装。\n注意：SpotX 的安装过程可能会修改 Spotify 的可执行文件，因此请务必谨慎操作，并备份相关文件。\n\n\n\n第三步：安装 Spicetify\n进入 Spicetify 官网下载 Spicetify。 安装过程建议同时安装 Marketplace，方便后续安装主题和 Extensions。\n验证 Spicetify 是否安装成功： 打开 PowerShell，输入以下命令：\n\nCopy Code\n\nspicetify -v\n\n如果出现类似下图的结果，则表示 Spicetify 安装成功。\n\n\n第四步：配置 SpicetifyMarketplace 配置通过 Marketplace，你可以轻松安装各种主题和 Extensions。 点击购物车按钮，选择你所需要的内容进行安装。\n\n手动配置\n选择主题：Spicetify 提供了丰富的主题供你选择。 你可以从 Spicetify 主题 仓库中找到更多主题。\n应用主题：\n将下载的主题文件夹复制到 C:\\Users\\&lt;你的用户名&gt;\\.spicetify\\Themes 目录下。\n在 PowerShell 中，使用以下命令应用主题：\n\n\n\nCopy Code\n\nspicetify config current_theme &lt;主题名称&gt;spicetify apply\n\n    将 `&lt;主题名称&gt;` 替换为你想要应用的主题文件夹的名称。\n\n\n自定义 Spicetify：你可以通过修改 config.ini 文件来自定义 Spicetify 的更多设置。\nconfig.ini 文件位于 C:\\Users\\&lt;你的用户名&gt;\\.spicetify 目录下。\n你可以修改字体、颜色、显示歌词等，打造个性化的 Spotify 界面。\n\n\n\n\n推荐的 Spicetify ExtensionsSpicetify 的强大之处在于其丰富的 Extensions，可以为你的 Spotify 带来更多功能。 这里推荐几个我常用的 Extensions：\n\nbeautiful-lyrics：显示歌词，支持多种歌词源。\nMade for youu shortcut：在 Spotify 界面上增加推荐菜单。\nshuffle：增强的随机播放功能。\nadblockify：去除非高级版的广告内容\n\n如何安装 Extensions\n推荐使用 Marketplace 安装\n\n\n通过 Marketplace 安装：在 Marketplace 中搜索你想要安装的 Extension，点击安装即可。\n手动安装：\n将下载的 Extension 文件复制到 C:\\Users\\&lt;你的用户名&gt;\\.spicetify\\Extensions 目录下。\n在 config.ini 文件中，找到 [AdditionalOptions] 部分，添加以下内容：\n\n\n\nCopy Code\n\n[AdditionalOptions]extensions = &lt;Extension 文件名&gt;\n\n    将 `&lt;Extension 文件名&gt;` 替换为你想要安装的 Extension 文件名（不包括 `.js` 后缀）。\n* 运行以下命令应用配置：\n\nCopy Code\n\nspicetify apply\n\n一些小建议\n定期更新 Spicetify：Spicetify 会定期发布更新，建议及时更新，以获得更好的体验。\n探索更多主题和 Extensions：Spicetify 社区提供了许多精美的主题和实用的 Extensions，你可以多加探索，找到最适合你的。\n备份你的配置：在修改 Spicetify 的配置之前，建议先备份你的 config.ini 文件，以防出现问题。\n\n总结通过以上步骤，你就可以在 Windows 上使用 SpotX 和 Spicetify 来定制你的 Spotify 体验了。 尽情享受你的专属音乐世界吧！\n\n免责声明：本文仅供技术交流和学习使用，请勿用于商业用途。 使用 SpotX 和 Spicetify 存在一定的风险，请务必谨慎操作，并自行承担可能产生的后果。\n\n","categories":["音乐","Spotify","定制"],"tags":["Windows","Spotify","Spicetify","SpotX"]}]